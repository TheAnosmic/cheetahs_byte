from compile.runner import run
from compile.vm import RunnerVM
from opcode_ import NOP, PNT, JMP
from opcode_ import PRT
from compile import compile_from_string

if '__main__' == __name__:
    opcodes = [NOP, PRT, PNT, JMP]
    s = r"""
__/\\\\\\\\\\\\\\\__/\\\______________________________________/\\\\\\\\\_____________________________________________________________________________________
 _\///////\\\/////__\/\\\____________________________________/\\\\\\\\\\\\\___________________________________________________________________________________
  _______\/\\\_______\/\\\___________________________________/\\\/////////\\\_______________________________________________________________/\\\_______________
   _______\/\\\_______\/\\\_____________/\\\\\\\\____________\/\\\_______\/\\\__/\\/\\\\\\_______/\\\\\_____/\\\\\\\\\\____/\\\\\__/\\\\\___\///______/\\\\\\\\_
    _______\/\\\_______\/\\\\\\\\\\____/\\\/////\\\___________\/\\\\\\\\\\\\\\\_\/\\\////\\\____/\\\///\\\__\/\\\//////___/\\\///\\\\\///\\\__/\\\___/\\\//////__
     _______\/\\\_______\/\\\/////\\\__/\\\\\\\\\\\____________\/\\\/////////\\\_\/\\\__\//\\\__/\\\__\//\\\_\/\\\\\\\\\\_\/\\\_\//\\\__\/\\\_\/\\\__/\\\_________
      _______\/\\\_______\/\\\___\/\\\_\//\\///////_____________\/\\\_______\/\\\_\/\\\___\/\\\_\//\\\__/\\\__\////////\\\_\/\\\__\/\\\__\/\\\_\/\\\_\//\\\________
       _______\/\\\_______\/\\\___\/\\\__\//\\\\\\\\\\___________\/\\\_______\/\\\_\/\\\___\/\\\__\///\\\\\/____/\\\\\\\\\\_\/\\\__\/\\\__\/\\\_\/\\\__\///\\\\\\\\_
        _______\///________\///____\///____\//////////____________\///________\///__\///____\///_____\/////_____\//////////__\///___\///___\///__\///_____\////////__
        """
    nc = compile_from_string(s,
                             allowed_opcodes=None)
    bytecode = nc.build()
    vm = RunnerVM(bytecode)
    run(bytecode, vm)
    from compile.disassembler import disassemble

    print '\n'.join(disassemble(nc))
    print ' '.join(str(t) for t in vm.opcode_used)
    print vm.out